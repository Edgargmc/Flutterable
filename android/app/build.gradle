
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"



android {
    compileSdkVersion 28


    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        //applicationId "com.mkm.qchapp"
        applicationId "com.flutter.hack19"
        minSdkVersion 17
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

    }

    signingConfigs {
        release {
          //  keyAlias keystoreProperties['keyAlias']
          //  keyPassword keystoreProperties['keyPassword']
          //  storeFile file(keystoreProperties['storeFile'])
          //  storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
         //   signingConfig signingConfigs.release
         //  minifyEnabled false
         //   useProguard true
         //   proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }
}

flutter {
    source '../..'
}

dependencies {
    /*
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation "com.android.support:support-core-utils:27.1.1"
    implementation 'com.google.firebase:firebase-messaging:17.3.0'
    implementation 'com.facebook.android:facebook-login:[4,5)'
    implementation 'com.google.firebase:firebase-core:16.0.4'
    */
    testImplementation 'junit:junit:4.12'
    // androidTestImplementation 'com.android.support.test:runner:1.0.2'
    // androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'com.google.firebase:firebase-messaging:17.3.0'
    implementation 'com.google.firebase:firebase-core:16.0.4'
    implementation 'com.google.android.gms:play-services-maps:16.0.0'
    implementation 'com.facebook.android:facebook-android-sdk:[4,5)'
    //

}

apply plugin: 'com.google.gms.google-services'